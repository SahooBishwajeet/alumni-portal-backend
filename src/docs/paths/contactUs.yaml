paths:
    /contactus:
        post:
            tags:
                - Contact
            summary: Submit contact form
            description: Submit a contact form - user details are automatically fetched
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - subject
                                - message
                            properties:
                                subject:
                                    type: string
                                    example: 'Query about Alumni Meet'
                                message:
                                    type: string
                                    example: 'I would like to know more details about...'
            responses:
                200:
                    description: Message sent successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    data:
                                        $ref: '#/components/schemas/ContactUs'
                                    message:
                                        type: string
                400:
                    description: Missing required fields
                401:
                    description: Not authenticated
                404:
                    description: User not found
                500:
                    description: Server error
        get:
            tags:
                - Contact
            summary: Get all contact forms
            description: Retrieve all contact form submissions (admin only) withdate range filter and search by user name/email.
            security:
                - bearerAuth: []
            parameters:
                - in: query
                  name: page
                  schema:
                      type: integer
                      minimum: 1
                      default: 1
                  description: Page number for pagination
                - in: query
                  name: limit
                  schema:
                      type: integer
                      minimum: 1
                      default: 10
                  description: Number of items per page
                - in: query
                  name: startDate
                  schema:
                      type: string
                      format: date
                      example: '2025-07-01'
                  description: Filter contact forms created after this date (inclusive)
                - in: query
                  name: endDate
                  schema:
                      type: string
                      format: date
                      example: '2025-07-23'
                  description: Filter contact forms created before this date (inclusive)
                - in: query
                  name: search
                  schema:
                      type: string
                      example: 'John Doe'
                  description: Search by user name or email (case-insensitive)
                - in: query
                  name: resolved
                  schema:
                      type: boolean
                  description: Filter by resolution state (true for resolved, false for unresolved)
            responses:
                200:
                    description: Contact forms retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    data:
                                        type: object
                                        properties:
                                            contactForms:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/ContactUs'
                                            pagination:
                                                type: object
                                                properties:
                                                    total:
                                                        type: integer
                                                        example: 120
                                                    totalPages:
                                                        type: integer
                                                        example: 12
                                                    currentPage:
                                                        type: integer
                                                        example: 1
                                                    perPage:
                                                        type: integer
                                                        example: 10
                                    message:
                                        type: string
                401:
                    description: Not authenticated
                500:
                    description: Server error

    /contactus/user:
        get:
            tags:
                - Contact
            summary: Get user's contact forms
            description: Retrieve all contact form submissions for a specific user
            security:
                - bearerAuth: []
            parameters:
                - in: body
                  name: userId
                  required: true
                  schema:
                      type: object
                      properties:
                          userId:
                              type: string
                      required:
                          - userId
            responses:
                200:
                    description: Contact forms retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    data:
                                        type: object
                                        properties:
                                            contactForms:
                                                type: array
                                                items:
                                                    $ref: '#/components/schemas/ContactUs'
                                    message:
                                        type: string
                400:
                    description: User ID is required
                401:
                    description: Not authenticated
                500:
                    description: Server error

    /contactus/respond:
        post:
            tags:
                - Contact
            summary: Respond to a contact form query
            description: Admin responds to a contact form query by UUID, sends an email to the original sender, and marks the query as resolved.
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - id
                                - subject
                                - message
                            properties:
                                id:
                                    type: string
                                    example: 'c1a2b3d4-5678-90ab-cdef-1234567890ab'
                                subject:
                                    type: string
                                    example: 'Follow-up on Alumni Meet Query'
                                message:
                                    type: string
                                    example: 'Thank you for your query. Here are the details...'
            responses:
                200:
                    description: Response sent and query marked as resolved
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                        example: true
                                    message:
                                        type: string
                                        example: 'Response sent and query marked as resolved'
                400:
                    description: Missing required fields or query already resolved
                404:
                    description: Contact query not found
                500:
                    description: Server error

components:
    schemas:
        Contact:
            type: object
            properties:
                id:
                    type: string
                user:
                    type: string
                name:
                    type: string
                email:
                    type: string
                subject:
                    type: string
                message:
                    type: string
                resolved:
                    type: boolean
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
