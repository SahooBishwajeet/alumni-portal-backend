paths:
    /auth/register:
        post:
            tags:
                - Authentication
            summary: Register a new user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
            responses:
                201:
                    description: Registration successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    data:
                                        type: object
                                        properties:
                                            email:
                                                type: string
                                    message:
                                        type: string

    /auth/login:
        post:
            tags:
                - Authentication
            summary: Login user
            description: Allows users to log in using either their college email, personal email, or user ID.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - identifier
                                - password
                            properties:
                                identifier:
                                    type: string
                                    description: 'Can be a college email, personal email, or user ID.'
                                    example: 'kusalasameera.g22@iiits.in'
                                password:
                                    type: string
                                    format: password
                                    example: 'your-password'
            responses:
                201:
                    description: Login successful
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                        example: true
                                    token:
                                        type: string
                                        description: JWT token for authentication
                                        example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
                                    user:
                                        type: object
                                        description: User details
                                        properties:
                                            id:
                                                type: string
                                                example: 'f834e73c-5e24-4b39-bf38-c00e31b7a1d1'
                                            name:
                                                type: string
                                                example: 'Kusala Sameera Gondela'
                                            collegeEmail:
                                                type: string
                                                example: 'kusalasameera.g22@iiits.in'
                                            personalEmail:
                                                type: string
                                                example: 'sameera@gmail.com'
                                            userId:
                                                type: string
                                                example: 'S20220010121'
                                            username:
                                                type: string
                                                example: 'samsam'
                                            profilePicture:
                                                type: string
                                                example: 'https://example.com/profile.jpg'
                                            batch:
                                                type: integer
                                                example: 2022
                                            department:
                                                type: string
                                                enum: ['AIDS', 'CSE', 'ECE']
                                                example: 'CSE'
                                            role:
                                                type: string
                                                enum:
                                                    [
                                                        'admin',
                                                        'alumni',
                                                        'student',
                                                    ]
                                                example: 'student'
                400:
                    description: Invalid input (missing fields or incorrect format)
                401:
                    description: Unauthorized - Invalid credentials
                500:
                    description: Server error

    /auth/verify-email:
        post:
            tags:
                - Authentication
            summary: Verify email address
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - token
                            properties:
                                token:
                                    type: string
            responses:
                200:
                    description: Email verified successfully

    /auth/resend-verification:
        post:
            tags:
                - Authentication
            summary: Resend verification email
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - email
                            properties:
                                email:
                                    type: string
                                    format: email
            responses:
                200:
                    description: Verification email sent successfully
                429:
                    description: Too many requests

    /auth/me:
        get:
            tags:
                - Authentication
            summary: Get current user profile
            security:
                - bearerAuth: []
            responses:
                200:
                    description: User profile retrieved successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    data:
                                        $ref: '#/components/schemas/User'
